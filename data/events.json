[null,{"name":"LevelingSystem","temp":"msg","event-type":"2","actions":[{"message":"1","varName":"msg","info":"3","storage":"1","varName2":"member","name":"Store Message Info"},{"member":"2","varName":"member","dataName":"exp","changeType":"1","value":"1","name":"Control Member Data"},{"member":"2","varName":"member","dataName":"level","defaultVal":"1","storage":"1","varName2":"myLevel","name":"Store Member Data"},{"member":"2","varName":"member","dataName":"exp","comparison":"1","value":"${tempVars(\"myLevel\") * 5}","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Member Data"},{"member":"2","varName":"member","dataName":"exp","changeType":"0","value":"0","name":"Control Member Data"},{"member":"2","varName":"member","dataName":"level","changeType":"1","value":"1","name":"Control Member Data"},{"message":"1","varName":"msg","info":"4","storage":"1","varName2":"channel","name":"Store Message Info"},{"member":"2","varName":"member","dataName":"level","defaultVal":"1","storage":"1","varName2":"myLevel","name":"Store Member Data"},{"channel":"4","varName":"","message":"${tempVars(\"member\")} reached level ${tempVars(\"myLevel\")}!","storage":"0","varName2":"","name":"Send Message"}],"_id":"ZgmAG"},{"name":"MemberVoiceUpdate","temp":"prior","event-type":"22","_id":"JYPVw","actions":[{"code":"const joinChannel = serverVars(\"createVoice\");\nif (joinChannel) {\n    if (me.permissions.has('MOVE_MEMBERS')) {\n        if (me.permissions.has('MANAGE_CHANNELS')) {\n            const newUserChannel = tempVars(\"after\")\n                .voiceChannel;\n            const oldUserChannel = tempVars(\"prior\")\n                .voiceChannel;\n            const TheUser = tempVars(\"after\");\n            const parent_ID = joinChannel.parentID;\n            const server = cache.server;\n            const Vname = TheUser.displayName + \"-private\";\n            const options = {\n                type: 'voice',\n                parent: parent_ID,\n                permissionOverwrites: [{\n                    id: server.id,\n                    deny: ['CONNECT']\n                }, {\n                    id: TheUser.id,\n                    allow: ['CONNECT', 'MANAGE_ROLES']\n                }]\n            };\n\n            if (newUserChannel == joinChannel) {\n                if (oldUserChannel && oldUserChannel.name == Vname) {\n                    oldUserChannel.delete();\n                    server.createChannel(Vname, options)\n                        .then(function (channel) {\n                            TheUser.setVoiceChannel(channel);\n                        }.bind(this))\n                        .catch(this.displayError.bind(this));\n                } else {\n                    server.createChannel(Vname, options)\n                        .then(function (channel) {\n                            TheUser.setVoiceChannel(channel);\n                        }.bind(this))\n                        .catch(this.displayError.bind(this));\n                }\n            } else if (oldUserChannel && oldUserChannel !== joinChannel && oldUserChannel.members.size == 0 && oldUserChannel.name == Vname) {\n                oldUserChannel.delete();\n            } else if (oldUserChannel && oldUserChannel !== joinChannel && oldUserChannel.members.size == 0 && oldUserChannel.name.includes('-private')) {\n                oldUserChannel.delete();\n            }\n        } else {\n            console.log('The bot is missing MANAGE_CHANNELS permission.');\n        }\n    } else {\n        console.log('The bot is missing MOVE_MEMBERS permission.');\n    }\n}","behavior":"1","interpretation":"1","storage":"0","varName":"","VTypeSelect":"0","CVTypeValue":"","name":"Run Script"}],"temp2":"after"},{"name":"SetBotGame","temp":"","event-type":"3","_id":"CLKqu","actions":[{"info":"3","storage":"1","varName2":"serwery","name":"Store Bot Client Info"},{"gameName":"Lubie Placki!!!","gameLink":"","name":"Set Bot Game"},{"time":"30","measurement":"2","name":"Wait"},{"gameName":"Dinozaury","gameLink":"","name":"Set Bot Game"},{"time":"30","measurement":"2","name":"Wait"},{"gameName":"XD","gameLink":"","name":"Set Bot Game"},{"time":"30","measurement":"2","name":"Wait"},{"gameName":"Niewiem co pisać","gameLink":"","name":"Set Bot Game"}]},{"name":"reactionStart","temp":"","event-type":"0","_id":"Lwriz","actions":[{"behavior":"3","name":"Run Action Sequence Once"},{"code":"const _this = this;\nconst fs = require('fs');\n\n//Settings\nconst dmUserAfter = true; // Default, can be changed to false\nvar messageSentAdd = 'Pomyślnie nadano range {rolename} in {server}';\nvar messageSentRemove = 'Pomyślnie usunięto range {rolename} in {server}';\n// The only variables that work rn, {rolename} and {server}\n\n\nif(fs.existsSync('./data/reactionRoleData.json')) {\n    fs.readFile('./data/reactionRoleData.json', function read(err, data) {\n        if (err) {\n            throw err;\n        }\n        data = JSON.parse(data)\n    \n        _this.storeValue(data, 3, 'reactionRoleInf', cache);\n    });\n} else {\n    fs.writeFile(\"./data/reactionRoleData.json\", \"{}\", function(err) {\n        if(err) {\n            return console.log(err);\n        }\n    });\n    _this.storeValue({}, 3, 'reactionRoleInf', cache);\n}\n\nclient.on('raw', packet => {\n    if (!['MESSAGE_REACTION_ADD', 'MESSAGE_REACTION_REMOVE'].includes(packet.t)) return;\n    const channel = client.channels.get(packet.d.channel_id);\n    if (channel.messages.has(packet.d.message_id)) return;\n    channel.fetchMessage(packet.d.message_id).then(message => {\n        const emoji = packet.d.emoji.id ? `${packet.d.emoji.name}:${packet.d.emoji.id}` : packet.d.emoji.name;\n        const reaction = message.reactions.get(emoji);\n        const reactionUser = client.users.get(packet.d.user_id);\n        if (reaction) reaction.users.set(packet.d.user_id, reactionUser);\n        if (!reactionUser.bot) {\n            if (packet.t === 'MESSAGE_REACTION_ADD') {\n                client.emit('messageReactionAdd', reaction, reactionUser);\n            }\n            if (packet.t === 'MESSAGE_REACTION_REMOVE') {\n                client.emit('messageReactionRemove', reaction, reactionUser);\n            }\n        }\n    });\n});\n\nclient.on('messageReactionAdd', async function(reaction, user) {\n    if (!user.bot) {\n        const reactionData = globalVars(\"reactionRoleInf\");\n        const reactionGuild = reaction.message.guild;\n        const reactionMessage = reaction.message;\n        if (reactionData.hasOwnProperty(reactionMessage.id)) {\n            var emojiName = reaction.emoji.name;\n            var roleInData = reactionData[reactionMessage.id].filter(re => re[0] == emojiName || re[0].name == emojiName)\n            if (roleInData.length != 0) {\n                var guilduser = await reactionGuild.fetchMember(user);\n                var roleData = roleInData[0][1];\n                var reactionRole = await reactionGuild.roles.get(roleData);\n                if (!guilduser.roles.has(roleData)) {\n                    guilduser.addRole(reactionRole);\n\n                    if (dmUserAfter){guilduser.send(messageSentAdd.replace(\"{rolename}\",`**${reactionRole.name}**`).replace(\"{server}\",`**${reactionGuild.name}**`));}\n                }\n            }\n        }\n    }\n\n});\n\nclient.on('messageReactionRemove', async function(reaction, user) {\n    const reactionData = globalVars(\"reactionRoleInf\");\n    const reactionGuild = reaction.message.guild;\n    const reactionMessage = reaction.message;\n    if (reactionData.hasOwnProperty(reactionMessage.id)) {\n        var emojiName = reaction.emoji.name;\n        var roleInData = reactionData[reactionMessage.id].filter(re => re[0] == emojiName || re[0].name == emojiName)\n        if (roleInData.length != 0) {\n            var guilduser = await reactionGuild.fetchMember(user);\n            var roleData = roleInData[0][1];\n            var reactionRole = await reactionGuild.roles.get(roleData);\n\n            if (guilduser.roles.has(roleData)) {\n                guilduser.removeRole(reactionRole);\n                if (dmUserAfter){guilduser.send(messageSentRemove.replace(\"{rolename}\",`**${reactionRole.name}**`).replace(\"{server}\",`**${reactionGuild.name}**`));}\n            }\n        }\n    }\n});","behavior":"0","interpretation":"1","storage":"0","varName":"","VTypeSelect":"0","CVTypeValue":"","name":"Run Script"}]}]